-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Haskcalc/Expr/Par.y
-----------------------------------------------------------------------------

state 10 contains 3 shift/reduce conflicts and 6 reduce/reduce conflicts.
state 12 contains 3 shift/reduce conflicts.
state 13 contains 1 shift/reduce conflicts.
state 14 contains 1 shift/reduce conflicts.
state 24 contains 5 reduce/reduce conflicts.
state 35 contains 3 shift/reduce conflicts and 5 reduce/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pDecl -> Decl                               (0)
	%start_pListIdent -> ListIdent                     (1)
	%start_pListDecl -> ListDecl                       (2)
	%start_pExpr -> Expr                               (3)
	%start_pExpr1 -> Expr1                             (4)
	%start_pExpr2 -> Expr2                             (5)
	%start_pExpr3 -> Expr3                             (6)
	%start_pListExpr -> ListExpr                       (7)
	Ident -> L_Ident                                   (8)
	Integer -> L_integ                                 (9)
	Decl -> Ident ListIdent '=' '{' ListDecl '}'       (10)
	Decl -> 'let' Ident '=' Expr                       (11)
	Decl -> Expr                                       (12)
	ListIdent ->                                       (13)
	ListIdent -> Ident ListIdent                       (14)
	ListDecl ->                                        (15)
	ListDecl -> Decl                                   (16)
	ListDecl -> Decl ';' ListDecl                      (17)
	Expr -> Expr1 '+' Expr                             (18)
	Expr -> Expr1                                      (19)
	Expr1 -> Expr2 '*' Expr1                           (20)
	Expr1 -> Expr2                                     (21)
	Expr2 -> Ident ListExpr                            (22)
	Expr2 -> Expr3                                     (23)
	Expr3 -> Ident                                     (24)
	Expr3 -> Integer                                   (25)
	Expr3 -> '(' Expr ')'                              (26)
	ListExpr ->                                        (27)
	ListExpr -> Expr ListExpr                          (28)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	'+'            { PT _ (TS _ 4) }
	';'            { PT _ (TS _ 5) }
	'='            { PT _ (TS _ 6) }
	'let'          { PT _ (TS _ 7) }
	'{'            { PT _ (TS _ 8) }
	'}'            { PT _ (TS _ 9) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pDecl    rule  0
	%start_pListIdent rule  1
	%start_pListDecl rule  2
	%start_pExpr    rule  3
	%start_pExpr1   rule  4
	%start_pExpr2   rule  5
	%start_pExpr3   rule  6
	%start_pListExpr rule  7
	Ident           rule  8
	Integer         rule  9
	Decl            rules 10, 11, 12
	ListIdent       rules 13, 14
	ListDecl        rules 15, 16, 17
	Expr            rules 18, 19
	Expr1           rules 20, 21
	Expr2           rules 22, 23
	Expr3           rules 24, 25, 26
	ListExpr        rules 27, 28

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pDecl -> . Decl                              (rule 0)

	'('            shift, and enter state 17
	'let'          shift, and enter state 28
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 24
	Integer        goto state 11
	Decl           goto state 31
	Expr           goto state 27
	Expr1          goto state 13
	Expr2          goto state 14
	Expr3          goto state 15

State 1

	%start_pListIdent -> . ListIdent                    (rule 1)

	L_Ident        shift, and enter state 9
	%eof           reduce using rule 13

	Ident          goto state 29
	ListIdent      goto state 30

State 2

	%start_pListDecl -> . ListDecl                      (rule 2)

	'('            shift, and enter state 17
	'let'          shift, and enter state 28
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18
	%eof           reduce using rule 15

	Ident          goto state 24
	Integer        goto state 11
	Decl           goto state 25
	ListDecl       goto state 26
	Expr           goto state 27
	Expr1          goto state 13
	Expr2          goto state 14
	Expr3          goto state 15

State 3

	%start_pExpr -> . Expr                              (rule 3)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Expr           goto state 23
	Expr1          goto state 13
	Expr2          goto state 14
	Expr3          goto state 15

State 4

	%start_pExpr1 -> . Expr1                            (rule 4)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Expr1          goto state 22
	Expr2          goto state 14
	Expr3          goto state 15

State 5

	%start_pExpr2 -> . Expr2                            (rule 5)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Expr2          goto state 21
	Expr3          goto state 15

State 6

	%start_pExpr3 -> . Expr3                            (rule 6)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 19
	Integer        goto state 11
	Expr3          goto state 20

State 7

	%start_pListExpr -> . ListExpr                      (rule 7)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18
	%eof           reduce using rule 27

	Ident          goto state 10
	Integer        goto state 11
	Expr           goto state 12
	Expr1          goto state 13
	Expr2          goto state 14
	Expr3          goto state 15
	ListExpr       goto state 16

State 8

	Ident -> . L_Ident                                  (rule 8)

	L_Ident        shift, and enter state 9


State 9

	Ident -> L_Ident .                                  (rule 8)

	'('            reduce using rule 8
	')'            reduce using rule 8
	'*'            reduce using rule 8
	'+'            reduce using rule 8
	';'            reduce using rule 8
	'='            reduce using rule 8
	'}'            reduce using rule 8
	L_Ident        reduce using rule 8
	L_integ        reduce using rule 8
	%eof           reduce using rule 8


State 10

	Expr2 -> Ident . ListExpr                           (rule 22)
	Expr3 -> Ident .                                    (rule 24)

	'('            shift, and enter state 17
			(reduce using rule 27)
			(reduce using rule 24)

	')'            reduce using rule 27
			(reduce using rule 24)

	'*'            reduce using rule 27
			(reduce using rule 24)

	'+'            reduce using rule 27
			(reduce using rule 24)

	';'            reduce using rule 27
			(reduce using rule 24)

	'}'            reduce using rule 27
			(reduce using rule 24)

	L_Ident        shift, and enter state 9
			(reduce using rule 27)
			(reduce using rule 24)

	L_integ        shift, and enter state 18
			(reduce using rule 27)
			(reduce using rule 24)

	%eof           reduce using rule 27
			(reduce using rule 24)


	Ident          goto state 10
	Integer        goto state 11
	Expr           goto state 12
	Expr1          goto state 13
	Expr2          goto state 14
	Expr3          goto state 15
	ListExpr       goto state 37

State 11

	Expr3 -> Integer .                                  (rule 25)

	'('            reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	'+'            reduce using rule 25
	';'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	%eof           reduce using rule 25


State 12

	ListExpr -> Expr . ListExpr                         (rule 28)

	'('            shift, and enter state 17
			(reduce using rule 27)

	')'            reduce using rule 27
	'*'            reduce using rule 27
	'+'            reduce using rule 27
	';'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        shift, and enter state 9
			(reduce using rule 27)

	L_integ        shift, and enter state 18
			(reduce using rule 27)

	%eof           reduce using rule 27

	Ident          goto state 10
	Integer        goto state 11
	Expr           goto state 12
	Expr1          goto state 13
	Expr2          goto state 14
	Expr3          goto state 15
	ListExpr       goto state 41

State 13

	Expr -> Expr1 . '+' Expr                            (rule 18)
	Expr -> Expr1 .                                     (rule 19)

	'('            reduce using rule 19
	')'            reduce using rule 19
	'*'            reduce using rule 19
	'+'            shift, and enter state 40
			(reduce using rule 19)

	';'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	%eof           reduce using rule 19


State 14

	Expr1 -> Expr2 . '*' Expr1                          (rule 20)
	Expr1 -> Expr2 .                                    (rule 21)

	'('            reduce using rule 21
	')'            reduce using rule 21
	'*'            shift, and enter state 39
			(reduce using rule 21)

	'+'            reduce using rule 21
	';'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	%eof           reduce using rule 21


State 15

	Expr2 -> Expr3 .                                    (rule 23)

	'('            reduce using rule 23
	')'            reduce using rule 23
	'*'            reduce using rule 23
	'+'            reduce using rule 23
	';'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	%eof           reduce using rule 23


State 16

	%start_pListExpr -> ListExpr .                      (rule 7)

	%eof           accept


State 17

	Expr3 -> '(' . Expr ')'                             (rule 26)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Expr           goto state 38
	Expr1          goto state 13
	Expr2          goto state 14
	Expr3          goto state 15

State 18

	Integer -> L_integ .                                (rule 9)

	'('            reduce using rule 9
	')'            reduce using rule 9
	'*'            reduce using rule 9
	'+'            reduce using rule 9
	';'            reduce using rule 9
	'}'            reduce using rule 9
	L_Ident        reduce using rule 9
	L_integ        reduce using rule 9
	%eof           reduce using rule 9


State 19

	Expr3 -> Ident .                                    (rule 24)

	%eof           reduce using rule 24


State 20

	%start_pExpr3 -> Expr3 .                            (rule 6)

	%eof           accept


State 21

	%start_pExpr2 -> Expr2 .                            (rule 5)

	%eof           accept


State 22

	%start_pExpr1 -> Expr1 .                            (rule 4)

	%eof           accept


State 23

	%start_pExpr -> Expr .                              (rule 3)

	%eof           accept


State 24

	Decl -> Ident . ListIdent '=' '{' ListDecl '}'      (rule 10)
	Expr2 -> Ident . ListExpr                           (rule 22)
	Expr3 -> Ident .                                    (rule 24)

	'('            shift, and enter state 17
	'*'            reduce using rule 27
			(reduce using rule 24)

	'+'            reduce using rule 27
			(reduce using rule 24)

	';'            reduce using rule 27
			(reduce using rule 24)

	'='            reduce using rule 13
	'}'            reduce using rule 27
			(reduce using rule 24)

	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18
	%eof           reduce using rule 27
			(reduce using rule 24)


	Ident          goto state 35
	Integer        goto state 11
	ListIdent      goto state 36
	Expr           goto state 12
	Expr1          goto state 13
	Expr2          goto state 14
	Expr3          goto state 15
	ListExpr       goto state 37

State 25

	ListDecl -> Decl .                                  (rule 16)
	ListDecl -> Decl . ';' ListDecl                     (rule 17)

	';'            shift, and enter state 34
	'}'            reduce using rule 16
	%eof           reduce using rule 16


State 26

	%start_pListDecl -> ListDecl .                      (rule 2)

	%eof           accept


State 27

	Decl -> Expr .                                      (rule 12)

	';'            reduce using rule 12
	'}'            reduce using rule 12
	%eof           reduce using rule 12


State 28

	Decl -> 'let' . Ident '=' Expr                      (rule 11)

	L_Ident        shift, and enter state 9

	Ident          goto state 33

State 29

	ListIdent -> Ident . ListIdent                      (rule 14)

	L_Ident        shift, and enter state 9
	%eof           reduce using rule 13

	Ident          goto state 29
	ListIdent      goto state 32

State 30

	%start_pListIdent -> ListIdent .                    (rule 1)

	%eof           accept


State 31

	%start_pDecl -> Decl .                              (rule 0)

	%eof           accept


State 32

	ListIdent -> Ident ListIdent .                      (rule 14)

	'='            reduce using rule 14
	%eof           reduce using rule 14


State 33

	Decl -> 'let' Ident . '=' Expr                      (rule 11)

	'='            shift, and enter state 47


State 34

	ListDecl -> Decl ';' . ListDecl                     (rule 17)

	'('            shift, and enter state 17
	'let'          shift, and enter state 28
	'}'            reduce using rule 15
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18
	%eof           reduce using rule 15

	Ident          goto state 24
	Integer        goto state 11
	Decl           goto state 25
	ListDecl       goto state 46
	Expr           goto state 27
	Expr1          goto state 13
	Expr2          goto state 14
	Expr3          goto state 15

State 35

	ListIdent -> Ident . ListIdent                      (rule 14)
	Expr2 -> Ident . ListExpr                           (rule 22)
	Expr3 -> Ident .                                    (rule 24)

	'('            shift, and enter state 17
			(reduce using rule 27)
			(reduce using rule 24)

	'*'            reduce using rule 27
			(reduce using rule 24)

	'+'            reduce using rule 27
			(reduce using rule 24)

	';'            reduce using rule 27
			(reduce using rule 24)

	'='            reduce using rule 13
	'}'            reduce using rule 27
			(reduce using rule 24)

	L_Ident        shift, and enter state 9
			(reduce using rule 27)
			(reduce using rule 24)

	L_integ        shift, and enter state 18
			(reduce using rule 27)
			(reduce using rule 24)

	%eof           reduce using rule 27
			(reduce using rule 24)


	Ident          goto state 35
	Integer        goto state 11
	ListIdent      goto state 32
	Expr           goto state 12
	Expr1          goto state 13
	Expr2          goto state 14
	Expr3          goto state 15
	ListExpr       goto state 37

State 36

	Decl -> Ident ListIdent . '=' '{' ListDecl '}'      (rule 10)

	'='            shift, and enter state 45


State 37

	Expr2 -> Ident ListExpr .                           (rule 22)

	'('            reduce using rule 22
	')'            reduce using rule 22
	'*'            reduce using rule 22
	'+'            reduce using rule 22
	';'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	%eof           reduce using rule 22


State 38

	Expr3 -> '(' Expr . ')'                             (rule 26)

	')'            shift, and enter state 44


State 39

	Expr1 -> Expr2 '*' . Expr1                          (rule 20)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Expr1          goto state 43
	Expr2          goto state 14
	Expr3          goto state 15

State 40

	Expr -> Expr1 '+' . Expr                            (rule 18)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Expr           goto state 42
	Expr1          goto state 13
	Expr2          goto state 14
	Expr3          goto state 15

State 41

	ListExpr -> Expr ListExpr .                         (rule 28)

	'('            reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	'+'            reduce using rule 28
	';'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	%eof           reduce using rule 28


State 42

	Expr -> Expr1 '+' Expr .                            (rule 18)

	'('            reduce using rule 18
	')'            reduce using rule 18
	'*'            reduce using rule 18
	'+'            reduce using rule 18
	';'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	%eof           reduce using rule 18


State 43

	Expr1 -> Expr2 '*' Expr1 .                          (rule 20)

	'('            reduce using rule 20
	')'            reduce using rule 20
	'*'            reduce using rule 20
	'+'            reduce using rule 20
	';'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	%eof           reduce using rule 20


State 44

	Expr3 -> '(' Expr ')' .                             (rule 26)

	'('            reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	'+'            reduce using rule 26
	';'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	%eof           reduce using rule 26


State 45

	Decl -> Ident ListIdent '=' . '{' ListDecl '}'      (rule 10)

	'{'            shift, and enter state 49


State 46

	ListDecl -> Decl ';' ListDecl .                     (rule 17)

	'}'            reduce using rule 17
	%eof           reduce using rule 17


State 47

	Decl -> 'let' Ident '=' . Expr                      (rule 11)

	'('            shift, and enter state 17
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 10
	Integer        goto state 11
	Expr           goto state 48
	Expr1          goto state 13
	Expr2          goto state 14
	Expr3          goto state 15

State 48

	Decl -> 'let' Ident '=' Expr .                      (rule 11)

	';'            reduce using rule 11
	'}'            reduce using rule 11
	%eof           reduce using rule 11


State 49

	Decl -> Ident ListIdent '=' '{' . ListDecl '}'      (rule 10)

	'('            shift, and enter state 17
	'let'          shift, and enter state 28
	'}'            reduce using rule 15
	L_Ident        shift, and enter state 9
	L_integ        shift, and enter state 18

	Ident          goto state 24
	Integer        goto state 11
	Decl           goto state 25
	ListDecl       goto state 50
	Expr           goto state 27
	Expr1          goto state 13
	Expr2          goto state 14
	Expr3          goto state 15

State 50

	Decl -> Ident ListIdent '=' '{' ListDecl . '}'      (rule 10)

	'}'            shift, and enter state 51


State 51

	Decl -> Ident ListIdent '=' '{' ListDecl '}' .      (rule 10)

	';'            reduce using rule 10
	'}'            reduce using rule 10
	%eof           reduce using rule 10


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 29
Number of terminals: 11
Number of non-terminals: 18
Number of states: 52
